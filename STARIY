pcall(function()game:GetService("Players").LocalPlayer.PlayerGui.DialogApp:Destroy()end)

local l__load__1 = require(game.ReplicatedStorage:WaitForChild("Fsys")).load;
local TableUtil = l__load__1("TableUtil");
local ClientData = l__load__1("ClientData");
local RouterClient = l__load__1("RouterClient");
local InventoryDB = l__load__1("InventoryDB");
RouterClient.get('SettingsAPI/SetSetting'):FireServer("family_requests",3)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("party_requests",3)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("trade_requests",1)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("give_item_requests",3)
plrs={}
words1={
    'king',
    'rich',
    'mad',
    'long',
    'sad',
    'fly',
    'tall',
    'snow',
    'poor',
    'shy',
    'old',
    'cool',
    'fat',
    'rare',
    'slow',
    'wise',
    'small'
}
words2={
    'crow',
    'lion',
    'seal',
    'deer',
    'crab',
    'bat',
    'pony',
    'pig',
    'bear',
    'emu',
    'fuck',
    'dog',
    'fish',
    'owl',
    'snail'
}
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))();

local Window1 = library:Window("Rawr")
Window1:Toggle("Bot Toggle",false,function(E)
    Toggle = E;
end);
Window1:Toggle("Msg Toggle",false,function(E)
    Toggle3 = E;
end);
Window1:Button("### Msg",function()
_G.ztype = '#'
end);
Window1:Button("random Msg",function()
_G.ztype = 'random'
end);

Window1:Button("Get Trade license",function()
    local l__load__1 = require(game.ReplicatedStorage:WaitForChild("Fsys")).load;
    local u1 = l__load__1("TableUtil");
    local u2 = l__load__1("ClientData");
    local u18 = l__load__1("RouterClient");
    u18.get("TradeAPI/BeginQuiz"):FireServer()
    wait(3)
    for i=1,3 do
    u18.get("TradeAPI/AnswerQuizQuestion"):FireServer(tostring(u1.deep_copy(u2.get("trade_license_quiz_manager")).quiz[i].answer))
    end
end);

local radius = 15
local angle = 0

Window1:Slider("Speed",5,150,10,function(E)
    game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = E;
end);

Window1:Slider("Radius",10,35,15,function(E)
    radius = E;
end);
Window1:Label("Made by BTWBaby", Color3.fromRGB(127, 143, 166))
Window1:Label("tested", Color3.fromRGB(127, 143, 166))

MSG = function(plr,type)
    if type == 'random' then
        if not plrs[tostring(plr)] then
            plrs[tostring(plr)] = {}
            table.insert(plrs[tostring(plr)], (words1[math.random(1,#words1)]..' '..words2[math.random(1,#words2)]))
            msg = plrs[tostring(plr)][1]
        else
            msg = plrs[tostring(plr)][1]
        end
    elseif type == 'custom' then
        msg = _G.custom
    elseif type == '#' then
        msg = '#### ###'
    end
    return tostring(msg)
end

require(game:GetService("ReplicatedStorage").ClientModules.Core.UIManager.Apps.TradeApp)._show_scam_perpetrator_warning = function() return end
require(game:GetService("ReplicatedStorage").ClientModules.Core.UIManager.Apps.TradeApp)._show_scam_victim_warning = function() return end
require(game:GetService("ReplicatedStorage").ClientModules.Core.UIManager.Apps.TradeApp).show_scam_warning = function() return end

local l__load__1 = require(game.ReplicatedStorage:WaitForChild("Fsys")).load;
local u1 = l__load__1("InventoryDB");
local u7 = l__load__1("RouterClient");
local RouterClient = l__load__1("RouterClient");
RouterClient.get('SettingsAPI/SetSetting'):FireServer("family_requests",3)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("party_requests",3)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("trade_requests",1)
RouterClient.get('SettingsAPI/SetSetting'):FireServer("give_item_requests",3)
function get_item(arg)
    for i,v in pairs(u1) do
        for ii,vv in pairs(v) do
            if vv.image == arg then
                return vv
            end
        end
    end
end
names = {'pet_flying_potion','pet_riding_potion'}
last_arg='lol'
function _remove(plr,arg)
    if last_arg ~= arg then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer('/w '..plr..' Уберите из трейда | Remove from trade : '..arg,"All")
        last_arg = arg
    end
end

local function check()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Body.PartnerOffer.Slots:GetDescendants()) do
        if v.Name =='ItemImageTemplate' then
            item = get_item(v.Image)
            if item['category'] == 'food' then
                if table.find(names,item['id']) then
                else
                    return false, item['name']
                end
            elseif item['category'] == 'transport' then
            elseif item['category'] == 'pets' then
            else
                return false, item['name']
            end
        end
    end
    return true, item['name']
end

last_trader = ''
local function trade()
    if Toggle3 and game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header:FindFirstChild("PartnerLabel") then
        if last_trader ~= game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text then
            last_trader = game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text
            if last_trader ~= '' then
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text.." Hello : "..game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text,"All")
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text.." Your code : "..MSG(game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Header.PartnerLabel.Text,_G.ztype),"All")
            end
        end
    end
    if (game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Body.PartnerOffer.Accepted.ImageTransparency ~= 1) then
        a,aa = check()
        if not a then 
            _remove(last_trader,aa)
        else
            u7.get("TradeAPI/AcceptNegotiation"):FireServer();
            game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.NegotiationFrame.Body.PartnerOffer.Accepted.ImageTransparency = 1
        end
    end
    if (game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.ConfirmationFrame.PartnerOffer.Accepted.ImageTransparency ~= 1) then
        u7.get("TradeAPI/ConfirmTrade"):FireServer();
        game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Frame.ConfirmationFrame.PartnerOffer.Accepted.ImageTransparency = 1
    end
end

task.spawn(function()
    while task.wait() do if _G.Execut == false then break end
        if Toggle then
            pcall(function()
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - posz.Position).magnitude>radius+4 then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = posz end
                newCFrame = (posz+Vector3.new(radius * math.cos(angle),0,radius * math.sin(angle)))
                game.Players.LocalPlayer.Character.Humanoid:MoveTo(newCFrame.Position)
                angle = angle + math.rad(1)
            end)
        end
    end
end)

vu=game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    vu:CaptureController()
    vu:ClickButton2(Vector2.new())
end)

pcall(function()
    if game:GetService("Workspace").HouseInteriors.blueprint:FindFirstChild(tostring(game.Players.LocalPlayer)) then
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ExtraButtonsApp.Frame:GetChildren()) do
            if v:IsA('ImageButton') and v.Face.TextLabel.Text == 'Exit Home' then
                fireButton1(v)
            end
        end
    end
end)

function getz()
	for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v.Name ~= 'Interiors' and v.Name ~= game.Players.LocalPlayer.Name and v.Name ~= 'Terrain' and not v:IsA("Camera") then
            v:Destroy()
        end
    end
end


function get()
    for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == 'destination_id' and v.Value == 'MainMap' then
            posz = v.Parent.Parent.TouchToEnter.CFrame*CFrame.new(0,-3,-43)
        end
    end
    return posz
end
repeat wait() until get() ~= nil

while wait(0.1) do
    if Toggle then
        getz()
        u7.get("FamilyAPI/CreateFamily"):InvokeServer()
        for i=1,#game.Players:GetChildren() do
            u7.get("TradeAPI/AcceptOrDeclineTradeRequest"):InvokeServer(game.Players:GetChildren()[i],true)
        end
        trade()
    end
end
